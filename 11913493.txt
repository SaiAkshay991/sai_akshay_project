1. write a shell script function that take name of a file or directory as unlimited argument and reports if it is a regular file, a directory, or another type of file. 
Also perform an ls command against the file or directory with the long listing option. Write for all the mention details . also create function function “file_count” and call it in your script. If you use variable in your function, remember to make it a local variable. [5]

Ans. 

function file_info {
  for item in "$@"; do
    if [ -f "$item" ]; then
      echo "$item is a regular file."
    elif [ -d "$item" ]; then
      echo "$item is a directory."
    else
      echo "$item is another type of file."
    fi
    echo "Listing contents of $item with long option:"
    ls -l "$item"
  done
}

function file_count {
  local count=0
  for item in "$@"; do
    if [ -f "$item" ]; then
      count=$((count + 1))
    fi
  done
  echo "Number of regular files: $count"
}

file_info "$@"
file_count "$@"

In the file_type.sh file the above shell script should be done.
And in the terminal give the permission and implement the functions as followed:

$ chmod +x file_type.sh
$ ./filetype.sh file1 file2 dir


output:: akshay991@ubuntu:~$ ./filetype.sh cla3.txt cla.sh Music
	cla3.txt is a regular file.
	Listing contents of cla3.txt with long option:
	-rwxrwxr-x 1 akshay991 akshay991 269 Feb  3 00:46 cla3.txt
	cla.sh is a regular file.
	Listing contents of cla.sh with long option:
	-rw-rw-r-- 1 akshay991 akshay991 213 Jan 31 01:12 cla.sh
	Music is a directory.
	Listing contents of Music with long option:
	total 0

--------------------------------------------------------------------------------------------------------------------------- 

2. You need to find a file named myfile.txt somewhere in your Linux file system. Which is thecorrect command to do this? [2]

Ans.  $ find / -name "myfile.txt"  

----------------------------------------------------------------------------------------------------------------------------

3. Write a script to Lock down the file or directory permission for folder1 files as per following requirement  [8]
mkdir folder1
touch f_{1..3}

.file.sh folder1/

Ans. 	if [ $# -eq 0 ]
	then
	  echo "Please provide directory name as an argument"
	  exit 1
	fi
	dir_name=$1
	for file in $dir_name/*; do
	  chmod 700 $file
	done
	echo "Permissions for all files in $dir_name have been set to 700"

output:: ./file.sh folder1

----------------------------------------------------------------------------------------------------------------------------
Remove all permissions for groups and others.
Provide directory name through command-line.
After running script all files in the given directory, Only should have all the permissions.
But remember dont add any permission to user only change to others and groups.



